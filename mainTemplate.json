{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "vmName": {
            "type": "string"
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A3"
        },
        "netName": {
            "type": "string",
            "defaultValue": "VNET"
        },
        "netPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16"
        },
        "wanName": {
            "type": "string",
            "defaultValue": "WAN"
        },
        "wanPrefix": {
            "type": "string",
            "defaultValue": "10.0.1.0/24"
        },
        "lanName": {
            "type": "string",
            "defaultValue": "LAN"
        },
        "lanPrefix": {
            "type": "string",
            "defaultValue": "10.0.2.0/24"
        },
        "storageName": {
            "type": "string",
            "metadata": {
                "description": "Unique storage account name (e.g. sfostest1)"
            }
        },
        "storageType": {
            "type": "string",
            "defaultValue": "Standard_LRS"
        },
        "storageEndpoint": {
            "type": "string",
            "defaultValue": "blob.core.windows.net",
            "allowedValues": [
                "blob.azurestack.local",
                "blob.core.windows.net"
            ],
            "metadata": {
                "description": "Blob storage endpoint"
            }
        },
        "imageSku": {
            "type": "string",
            "defaultValue": "byol",
            "allowedValues": [
                "byol"
            ],
            "metadata": {
                "description": "License type to use"
            }
        },
        "pipDNS": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS name prefix (e.g. sfostest1)"
            }
        },
        "pipName": {
            "type": "string",
            "defaultValue": "PublicIP"
        },
        "pipNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ]
        },
        "pipRG": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "variables": {
        "baseUrl": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/cisco-csr-1000v/",
        "pipTemplate": "[concat(variables('baseUrl'),'/publicip-',parameters('pipNewOrExisting'),'.json')]",
        "location": "[resourceGroup().location]",
        "group": "[resourceGroup().name]",
        "vhdContainer": "vhds",
        "nicName": "PortB",
        "nicName2": "PortA",
        "networkSecurityGroupName": "SecurityGroup",
        "routeTableName": "RouteTable",
        "pipType": "Dynamic",
        "netId": "[resourceId('Microsoft.Network/virtualNetworks',parameters('netName'))]",
        "wanId": "[concat(variables('netId'),'/subnets/',parameters('wanName'))]",
        "lanId": "[concat(variables('netId'),'/subnets/',parameters('lanName'))]",
        "adminUsername": "azureuser",
        "sshKeyPath": "[concat('/home/',variables('adminUsername'),'/.ssh/authorized_keys')]",
        "apiVersion": {
            "resources": {
                "deployments": "2016-02-01"
            },
            "network": "2016-06-01",
            "storage": "2016-01-01",
            "compute": "2016-03-30"
        },
        "imagePublisher": "sophos",
        "imageOffer": "sophos-xg-firewall-preview"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[toLower(parameters('storageName'))]",
            "apiVersion": "[variables('apiVersion').storage]",
            "location": "[variables('location')]",
            "properties": {

            },
            "sku": {
                "name": "[parameters('storageType')]"
            },
            "kind": "Storage"
        },
        {
            "apiVersion": "[variables('apiVersion').network]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[variables('location')]",
            "tags": {
                "displayName": "NetworkSecurityGroup"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "allow_webui",
                        "properties": {
                            "protocol": "tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "4444",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow_ssh",
                        "properties": {
                            "protocol": "tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 102,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "SettingUpPublicIP",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('pipTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "publicIPAddressName": {
                        "value": "[parameters('pipName')]"
                    },
                    "publicIPAddressType": {
                        "value": "[variables('pipType')]"
                    },
                    "dnsPrefix": {
                        "value": "[parameters('pipDNS')]"
                    },
                    "publicIpRGName": {
                        "value": "[parameters('pipRG')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersion').network]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('netName')]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('netPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('wanName')]",
                        "properties": {
                            "addressPrefix": "[parameters('wanPrefix')]"
                        }
                    },
                    {
                        "name": "[parameters('lanName')]",
                        "properties": {
                            "addressPrefix": "[parameters('lanPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('routeTableName')]",
            "apiVersion": "[variables('apiVersion').network]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName2'))]"
            ],
            "properties": {
                "routes": [
                    {
                        "name": "DefaultViaXG",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[reference(resourceId('Microsoft.Network/networkInterfaces',variables('nicName2'))).ipConfigurations[0].properties.privateIPAddress]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion').network]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpPublicIP')]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('netName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
            ],
            "properties": {
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                },
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[reference('SettingUpPublicIP').outputs.publicIpId.value]"
                            },
                            "subnet": {
                                "id": "[variables('wanId')]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true
            }
        },
        {
            "apiVersion": "[variables('apiVersion').network]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName2')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('netName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('lanId')]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true
            }
        },
        {
            "apiVersion": "[variables('apiVersion').compute]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmName')]",
            "plan": {
                "publisher": "[variables('imagePublisher')]",
                "product": "[variables('imageOffer')]",
                "name": "[parameters('imageSku')]"
            },
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName2'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('imageSku')]",
                        "version": "latest"
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(parameters('vmName'),'-dataDisk')]",
                            "lun": 0,
                            "createOption": "FromImage",
                            "vhd": {
                                "uri": "[concat('http://',parameters('storageName'),'.', parameters('storageEndpoint'), '/', variables('vhdContainer'),'/',parameters('vmName'),'-aux.vhd')]"
                            }
                        }
                    ],
                    "osDisk": {
                        "name": "[concat(parameters('vmName'),'-osDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "vhd": {
                            "uri": "[concat('http://',parameters('storageName'),'.', parameters('storageEndpoint'), '/', variables('vhdContainer'),'/',parameters('vmName'),'-prim.vhd')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName2'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[concat('http://',parameters('storageName'),'.', parameters('storageEndpoint'))]"
                    }
                }
            }
        }
    ]
}
